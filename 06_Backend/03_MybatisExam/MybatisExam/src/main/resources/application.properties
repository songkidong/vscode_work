# \uC11C\uBC84 \uD3EC\uD2B8
server.port=8000

# TODO: \uC624\uB77C\uD074 \uC124\uC815 : log4j \uC801\uC6A9
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
# TODO: spring.datasource.url=jdbc:log4jdbc:oracle:thin:@ip:\uD3EC\uD2B8/db\uC774\uB984
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521/xepdb1
# TODO: spring.datasource.username=db\uC811\uC18D\uACC4\uC815\uBA85
spring.datasource.username=scott
# TODO: spring.datasource.password=db\uC554\uD638
spring.datasource.password=!Ds1234567890

# 1)  resource/data.sql \uC790\uB3D9 \uC2E4\uD589 ( DML \uC2E4\uD589 )
# -> data.sql ( dml \uC2E4\uD589 ), schema.sql ( ddl \uC2E4\uD589 )
# always : \uD56D\uC0C1 sql \uC2A4\uD06C\uB9BD\uD2B8 \uC7AC\uC2E4\uD589,
# \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uC744 \uACBD\uC6B0 \uC544\uB798 \uC8FC\uC11D\uC73C\uB85C \uB9C9\uC744\uAC83
spring.sql.init.mode=always
# sql \uC2A4\uD06C\uB9BD\uD2B8 \uC5D0\uB7EC \uBB34\uC2DC\uD558\uACE0 \uC2A4\uD504\uB9C1 \uC11C\uBC84 \uB85C\uB529
spring.sql.init.continue-on-error=true

# \uC790\uBC14 \uC18C\uC2A4 \uBCC0\uACBD\uC2DC \uC2A4\uD504\uB9C1 \uC11C\uBC84 \uC790\uB3D9 \uC7AC\uC2DC\uC791
spring.devtools.restart.enabled=true

# TODO: HikariCP(\uCEE4\uB125\uC158 \uD480 \uC124\uC815) settings
# TODO: db \uC811\uC18D\uC218 \uC81C\uD55C
spring.datasource.hikari.minimumIdle=1
spring.datasource.hikari.maximumPoolSize=1
spring.datasource.hikari.poolName=HikariPoolBooks

# TODO: mybatis \uD328\uD0A4\uC9C0 : \uBAA8\uB378\uC758 \uD328\uD0A4\uC9C0 \uC704\uCE58\uB97C \uC124\uC815
# TODO: Model \uD3F4\uB354(\uD328\uD0A4\uC9C0)\uC758 \uC704\uCE58
mybatis.type-aliases-package=com.example.mybatisexam.model
# TODO: mybatis \uC124\uC815 \uD30C\uC77C :mapper-config.xml(\uC0DD\uB7B5\uAC00\uB2A5), mappers/*.xml 2 \uC885\uB958 \uD544\uC694
# TODO: /** : \uD558\uC704\uACBD\uB85C \uC758\uBBF8, *.xml(crud sql\uBB38\uC774 \uC815\uC758\uB418\uB294 \uACF3)
mybatis.mapper-locations=classpath:mappers/**/*.xml
# TODO: MyBatis \uC124\uC815 : sql \uBA85\uBA85\uBC95(\uC5B8\uB354\uBC14) -> java \uBA85\uBA85\uBC95(\uB099\uD0C0\uD45C\uAE30\uBC95) \uC73C\uB85C \uC790\uB3D9 \uBCC0\uACBD
mybatis.configuration.map-underscore-to-camel-case=true
# TODO: sql \uACB0\uACFC\uB85C null \uAC12 \uD5C8\uC6A9
mybatis.configuration.call-setters-on-nulls=true
# TODO: sql \uB9E4\uAC1C\uBCC0\uC218\uC5D0 null \uAC12 \uD5C8\uC6A9
mybatis.configuration.jdbc-type-for-null=null

# jsp \uACBD\uB85C : view resolver
spring.mvc.view.prefix=/WEB-INF/views/
# jsp \uD655\uC7A5\uC790 \uC0DD\uB7B5 \uC124\uC815
#spring.mvc.view.suffix=.jsp
# PUT , DELETE \uBC29\uC2DD\uB3C4 form \uC5D0\uC11C \uC0AC\uC6A9\uD560 \uC218 \uC788\uAC8C \uB9CC\uB4E4\uC5B4\uC90C
spring.mvc.hiddenmethod.filter.enabled=true
