// TODO: 자료형
// 1) 문자열 : ex) "안녕하세요", '안녕하세요'
//      쌍따옴표, 홑따옴표를 사용해서 문자들을 묶음
// alert("안녕하세요");
// alert('안녕하세요');

// 2) 숫자 : 1, 2, 3 등
// alert(1);

// 3) 표현식 : 변수, 상수, 값 ...

// 1) 변수 : 변하는 값을 저장하는 곳(공간), 1가지 값만 저장 (***)
//      vs 값 : 문자열, 숫자 등

// 변수 사용법 : let 변수명 = 값;
// let hello = "안녕하세요";
// hello = "안녕"; // 값 수정(변수는 가능)

// 출력방법 : 변수 사용해서 출력(소프트 코딩(soft coding)), 추천
// alert(hello);
// vs 아래 출력방법 : 하드 코딩(hard coding), 추천하지 않음
// alert("안녕");

// 2) 상수 : 변하지 않는 값을 저장하는 곳(공간)
// 상수 사용법 : const 상수명 = 값;
// 실습
// const num = 1; // 상수 정의(값 저장), 초기화
//num = 2; // 상수이기 때문에 수정 불가(에러 발생)
// alert(num);

// 연산자
// 사칙연산자 : +(덧셈), -(뺄셈), *(곱셈), /(나눗셈), %(나머지 연산자)
// 실습
// 1) 덧셈
// let num = 273+52; // 변수 정의(값 저장), 변수명(상수명) 유일
// 결과
// alert(num);

// 2) 뺄셈
// let num1 = 273-52;
// 결과
// alert(num1);

// 3) 곱셈
// let num2 = 273*52;
// 결과
// alert(num2);

// 4) 나눗셈 : 소수점(비슷한 숫자, 유사한 숫자(부동소수점법))
// let num3 = 273/52;
// 결과
// alert(num3);

// 5) 나머지연산
// let num4 = 273%52;
// 결과
// alert(num4);

// 문자열 특수문자 : \(역슬래쉬)
// 특수문자 사용법 : \ + 영문자

// 1) 줄바꿈 : \n
// let hello = "안녕하세요\n송기동입니다"
// 결과출력
// alert(hello);

// 2) 홑따옴표, 쌍따옴표 출력
// '안녕하세요'
// let hello = "'안녕하세요'"
// alert(hello);
// "안녕하세요"
// let hello = '"안녕하세요"'
// alert(hello);

// 쌍따옴표 + 홑따옴표 모두 출력
// 사용법 : 특수문자사용 : \", \'
// '"안녕"하세요'
let hello = "'\"안녕\"하세요'";
alert(hello);